<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Specifications in Mocha</title>
  <meta name="generator" content="Mocha &lt;https://mochajs.org/&gt;" />
  <meta name="license" content="MIT" />
  <meta name="copyright" content="&#169; 2016 Kevin Locke &lt;kevin@kevinlocke.name&gt;" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous" />
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/highlight.js/9.1.0/styles/github.min.css" />
  <style type="text/css">
section section {
  margin-left: 1em;
}
section section section section {
  margin-left: 0;
}
  </style>
</head>
<body>
  <div class="container">
    <section class="suite">
      <h1>json-replace-exponentials</h1>
      <dl>
        <dt>throws TypeError with no args</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jreBin(),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for non-Array first arg</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jreBin({}, getTestOptions(), neverCalled),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for non-Object second arg</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jreBin(sharedArgs, 1, neverCalled),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for missing stdin</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
delete options.stdin;
assert.throws(
  () =&#x3E; jreBin(sharedArgs, options, neverCalled),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for missing stdout</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
delete options.stdout;
assert.throws(
  () =&#x3E; jreBin(sharedArgs, options, neverCalled),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for missing stderr</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
delete options.stderr;
assert.throws(
  () =&#x3E; jreBin(sharedArgs, options, neverCalled),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for non-function callback</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jreBin(sharedArgs, getTestOptions(), {}),
  TypeError,
);</code></pre></dd>
        <dt>writes error and exit 1 for unexpected args</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
const result = jreBin([...sharedArgs, &#x27;hi&#x27;], options, (code) =&#x3E; {
  assert.strictEqual(code, 1);
  assert.strictEqual(options.stdout.read(), null);
  assert.strictEqual(
    options.stderr.read(),
    &#x60;Error: Unexpected arguments.\n${usage}&#x60;,
  );
  done();
});
assert.strictEqual(result, undefined);</code></pre></dd>
        <dt>writes usage and exit 0 for --help</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
const result = jreBin([...sharedArgs, &#x27;--help&#x27;], options, (code) =&#x3E; {
  assert.strictEqual(code, 0);
  assert.strictEqual(options.stdout.read(), usage);
  assert.strictEqual(options.stderr.read(), null);
  done();
});
assert.strictEqual(result, undefined);</code></pre></dd>
        <dt>writes version and exit 0 for --version</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
const result = jreBin([...sharedArgs, &#x27;--version&#x27;], options, (code) =&#x3E; {
  assert.strictEqual(code, 0);
  assert.strictEqual(
    options.stdout.read(),
    &#x60;${packageJson.name} ${packageJson.version}\n&#x60;,
  );
  assert.strictEqual(options.stderr.read(), null);
  done();
});
assert.strictEqual(result, undefined);</code></pre></dd>
        <dt>writes transformed JSON to stdout</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const options = getTestOptions();
const result = jreBin(sharedArgs, options, (code) =&#x3E; {
  assert.strictEqual(code, 0);
  assert.strictEqual(options.stdout.read(), &#x27;100&#x27;);
  assert.strictEqual(options.stderr.read(), null);
  done();
});
assert.strictEqual(result, undefined);
options.stdin.end(&#x27;1e2&#x27;);</code></pre></dd>
        <dt>handles input split across multiple reads</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>// Ensure string parsing maintains state across reads
const options = getTestOptions();
const result = jreBin(sharedArgs, options, (code) =&#x3E; {
  assert.strictEqual(code, 0);
  assert.strictEqual(options.stdout.read(), &#x27;[100,&#x22;1e2,1e2&#x22;,100]&#x27;);
  assert.strictEqual(options.stderr.read(), null);
  done();
});
assert.strictEqual(result, undefined);
options.stdin.write(&#x27;[1e2,&#x22;1e2&#x27;);
setTimeout(
  () =&#x3E; options.stdin.end(&#x27;,1e2&#x22;,1e2]&#x27;),
  10,
);</code></pre></dd>
        <dt>writes error and exit 1 for stdin read error</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const errTest = new Error(&#x27;test&#x27;);
const options = getTestOptions();
const result = jreBin(sharedArgs, options, (code) =&#x3E; {
  assert.strictEqual(code, 1);
  assert.strictEqual(options.stdout.read(), null);
  assert.strictEqual(
    options.stderr.read(),
    &#x60;Error reading from stdin: ${errTest}\n&#x60;,
  );
  done();
});
assert.strictEqual(result, undefined);
options.stdin.emit(&#x27;error&#x27;, errTest);</code></pre></dd>
        <dt>writes error and exit 1 for stdout write error</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const errTest = new Error(&#x27;test&#x27;);
const options = getTestOptions();
// eslint-disable-next-line no-underscore-dangle
options.stdout._transform = (chunk, enc, cb) =&#x3E; cb(errTest);
const result = jreBin(sharedArgs, options, (code) =&#x3E; {
  assert.strictEqual(code, 1);
  assert.strictEqual(
    options.stderr.read(),
    &#x60;Error writing to stdout: ${errTest}\n&#x60;,
  );
  done();
});
assert.strictEqual(result, undefined);
options.stdin.end(&#x27;{}&#x27;);</code></pre></dd>
        <dt>writes error and exit 1 for sync stdout write error</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/bin/json-replace-exponentials.js</dt>
        <dd><pre><code>const errTest = new Error(&#x27;test&#x27;);
const options = getTestOptions();
options.stdout.write = () =&#x3E; { throw errTest; };
const result = jreBin(sharedArgs, options, (code) =&#x3E; {
  assert.strictEqual(code, 1);
  assert.strictEqual(
    options.stderr.read(),
    &#x60;Error writing to stdout: ${errTest}\n&#x60;,
  );
  done();
});
assert.strictEqual(result, undefined);
options.stdin.end(&#x27;{}&#x27;);</code></pre></dd>
      </dl>
    </section>
    <section class="suite">
      <h1>jsonReplaceExponentials</h1>
      <dl>
        <dt>converts 0e0 to 0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0e0 to -0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0e+0 to 0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0e+0 to -0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0e-0 to 0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0e-0 to -0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.01e2 to 1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.01e2 to -1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1e2 to 10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1e2 to -10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1e1 to 1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1e1 to -1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1e0 to 0.1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1e0 to -0.1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1e-0 to 0.1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1e-0 to -0.1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1e-1 to 0.01</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1e-1 to -0.01</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e0 to 1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e0 to -1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e-0 to 1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e-0 to -1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e1 to 10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e1 to -10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e+1 to 10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e+1 to -10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e-1 to 0.1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e-1 to -0.1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.0e0 to 1.0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.0e0 to -1.0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.0e-0 to 1.0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.0e-0 to -1.0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.0e1 to 10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.0e1 to -10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.0e+1 to 10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.0e+1 to -10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.0e-1 to 0.10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.0e-1 to -0.10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10e0 to 10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10e0 to -10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10e1 to 100</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10e1 to -100</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10e-1 to 1.0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10e-1 to -1.0</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10e-2 to 0.10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10e-2 to -0.10</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e2 to 1020</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e2 to -1020</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e1 to 102</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e1 to -102</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e0 to 10.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e0 to -10.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e-0 to 10.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e-0 to -10.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e-1 to 1.02</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e-1 to -1.02</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e-2 to 0.102</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e-2 to -0.102</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 10.2e-3 to 0.0102</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -10.2e-3 to -0.0102</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.2e2 to 120</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.2e2 to -120</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.2e1 to 12</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.2e1 to -12</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.2e0 to 1.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.2e0 to -1.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.2e-0 to 1.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.2e-0 to -1.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.2e-1 to 0.12</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.2e-1 to -0.12</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1.2e-2 to 0.012</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1.2e-2 to -0.012</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e010 to 10000000000</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e010 to -10000000000</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e+010 to 10000000000</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e+010 to -10000000000</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 1e-010 to 0.0000000001</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -1e-010 to -0.0000000001</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1234567890123456789e1 to 1.234567890123456789</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1234567890123456789e1 to -1.234567890123456789</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1234567890123456789e0 to 0.1234567890123456789</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1234567890123456789e0 to -0.1234567890123456789</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>converts 0.1234567890123456789e-1 to 0.01234567890123456789</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts -0.1234567890123456789e-1 to -0.01234567890123456789</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(&#x60;-${exp}&#x60;),
  &#x60;-${fixed}&#x60;,
);</code></pre></dd>
        <dt>does not modify or call replacer for 1</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>does not modify or call replacer for 1.2</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>does not modify or call replacer for &#x22;1e2&#x22;</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>does not modify or call replacer for [&#x22;1e2&#x22;]</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>does not modify or call replacer for {&#x22;1e2&#x22;:&#x22;1e2&#x22;}</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>does not modify or call replacer for &#x22;\&#x22;1e2,&#x22;</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>does not modify or call replacer for &#x22;\\\&#x22;1e2,&#x22;</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.strictEqual(
  jsonReplaceExponentials(unmodifiedJson, neverCalled),
  unmodifiedJson,
);</code></pre></dd>
        <dt>converts [1e1,1e-1,1e2] to [10,0.1,100]</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts [ 1e1 ,1e-1 ,
1e2
] to [ 10 ,0.1 ,
100
]</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts {&#x22;a&#x22;:1e2} to {&#x22;a&#x22;:100}</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts {&#x22;a&#x22;
: 1e2
} to {&#x22;a&#x22;
: 100
}</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts [1e1,&#x22;1e0&#x22;,1e-1,1e2] to [10,&#x22;1e0&#x22;,0.1,100]</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts [1e1,&#x22;1e1\\1e1&#x22;,1e-1,&#x22;\&#x22;1e1\\\&#x22;1e1&#x22;,1e2] to [10,&#x22;1e1\\1e1&#x22;,0.1,&#x22;\&#x22;1e1\\\&#x22;1e1&#x22;,100]</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts [&#x22;1e1&#x22;,1e1] to [&#x22;1e1&#x22;,10]</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>converts {&#x22;1e1&#x22;:1e1} to {&#x22;1e1&#x22;:10}</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>// Ensure the test values are valid JSON
JSON.parse(exp);
JSON.parse(fixed);
assert.strictEqual(
  jsonReplaceExponentials(exp),
  fixed,
);</code></pre></dd>
        <dt>calls replacer with number to replace</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>let callCount = 0;
function testReplacer(...args) {
  assert.strictEqual(this, undefined);
  assert.deepStrictEqual(args, [&#x27;1e2&#x27;]);
  callCount += 1;
  return callCount;
}
assert.strictEqual(
  jsonReplaceExponentials(&#x27;[1e2,1e2]&#x27;, testReplacer),
  &#x27;[1,2]&#x27;,
);</code></pre></dd>
        <dt>throws TypeError for no args</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jsonReplaceExponentials(),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for non-string first arg</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jsonReplaceExponentials(Buffer.alloc(0)),
  TypeError,
);</code></pre></dd>
        <dt>throws TypeError for non-function second arg</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jsonReplaceExponentials(&#x27;&#x27;, {}),
  TypeError,
);</code></pre></dd>
        <dt>throws RangeError for exponent too large without replacer</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jsonReplaceExponentials(&#x27;1e1000000&#x27;),
  RangeError,
);</code></pre></dd>
        <dt>does not throw for large exponent with replacer</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>const bigExp = &#x27;1e1000000&#x27;;
const bigReplacement = &#x27;Infinity&#x27;;
function testReplacer(num) {
  assert.strictEqual(num, bigExp);
  return bigReplacement;
}
assert.strictEqual(
  jsonReplaceExponentials(bigExp, testReplacer),
  bigReplacement,
);</code></pre></dd>
        <dt>throws RangeError for exponent too negative without replacer</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>assert.throws(
  () =&#x3E; jsonReplaceExponentials(&#x27;1e-1000000&#x27;),
  RangeError,
);</code></pre></dd>
        <dt>does not throw for large negative exponent with replacer</dt>
        <dt>/home/kevin/src/node-projects/json-replace-exponentials/test/index.js</dt>
        <dd><pre><code>const bigExp = &#x27;1e-1000000&#x27;;
const bigReplacement = &#x27;0&#x27;;
function testReplacer(num) {
  assert.strictEqual(num, bigExp);
  return bigReplacement;
}
assert.strictEqual(
  jsonReplaceExponentials(bigExp, testReplacer),
  bigReplacement,
);</code></pre></dd>
      </dl>
    </section>
  </div><!-- .container -->

  <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/2.2.1/jquery.min.js"></script>
  <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/highlight.js/9.1.0/highlight.min.js"></script>
  <script type="text/javascript">//<![CDATA[
'use strict';
// Adjust the nested heading level to match depth
$('section section h1').each(function() {
  var $this = $(this);
  var depth = Math.min($this.parents('section').length, 6);
  // http://stackoverflow.com/a/30059450/503410
  $this.wrapInner(document.createElement('h' + depth)).children().unwrap();
});

// Make the tests collapsible
var testNum = 0;
$('dt + dd')
  .addClass('collapse')
  .attr('role', 'tabpanel')
  .attr('aria-expanded', 'false')
  .each(function() {
    var $this = $(this);
    var $dt = $this.prev();

    ++testNum;
    var id = 'test' + testNum;
    var idDt = id + '-title';
    var idDd = id + '-desc';

    $dt.attr('id', idDt);
    $this.attr('id', idDd);

    $dt.wrapInner('<a role="button" data-toggle="collapse" href="#' + idDd +
        '" aria-expanded="false" aria-controls="' + idDd + '"></a>')
      .children()
      .collapse();
  });

// Enable syntax highlighting for the code (which is all JavaScript)
hljs.configure({languages: ['javascript']});
hljs.initHighlighting();
//]]></script>
</body>
</html>
